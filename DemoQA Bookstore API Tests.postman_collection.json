{
	"info": {
		"_postman_id": "bef80968-6b6d-43e4-8382-262f96bb6d2d",
		"name": "DemoQA Bookstore API Tests",
		"description": "In today’s article, we will explore how to effectively test a Book Store API using Postman. We’ll cover setting up requests, validating responses, and utilizing Postman’s powerful scripting capabilities to ensure your API works as expected.\n\n## Table of Contents\n\n1. Introduction\n    \n2. Setting Up Postman\n    \n3. Creating API Requests\n    \n4. Writing Tests\n    \n5. Validating Responses\n    \n6. Conclusion\n    \n\n## Introduction\n\nAPIs play a crucial role in modern software development, allowing different systems to communicate and share data. Postman is a popular tool that simplifies the process of testing APIs, making it easier to ensure they meet specifications. In this tutorial, we’ll use the Book Store API as our example, focusing on user authentication, user management, and book retrieval.\n\n## Setting Up Postman\n\nBefore we begin, make sure you have Postman installed. Create a new environment in Postman with the following variables:\n\n- **baseUrl**: The base URL for the API (e.g., `https://demoqa.com`)\n    \n- **username**: Your test username\n    \n- **password**: Your test password\n    \n- **token**: (Leave blank; it will be set dynamically)\n    \n\nSave the environment so it can be reused across requests.\n\n## **Creating API Requests**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35948739",
		"_collection_link": "https://www.postman.com/altimetry-explorer-23850898/bookstoreapi-demo/collection/3zslhmg/demoqa-bookstore-api-tests?action=share&source=collection_link&creator=35948739"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created successfully\", function () {\r",
							"    pm.response.to.have.status(201);  // Ensure the request was successful\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.environment.set(\"userId\", jsonData.userId);  // Save the userId in the environment\r",
							"    pm.environment.set(\"username\", jsonData.username);  // Save the username in the environment (optional)\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/User",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"User"
					]
				}
			},
			"response": [
				{
					"name": "Create User",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/v1/User",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"User"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:05:53 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "82"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"52-woq0BS9LCqbXwDlcl7cHKs7+ZpI\""
						}
					],
					"cookie": [],
					"body": "{\n    \"userID\": \"9feb2038-9b7b-474a-9a3d-b26a3055bc86\",\n    \"username\": \"kanchana\",\n    \"books\": []\n}"
				}
			]
		},
		{
			"name": "Generate A Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"ApiToken\", body.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/GenerateToken",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"GenerateToken"
					]
				}
			},
			"response": [
				{
					"name": "Generate A Token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/v1/GenerateToken",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"GenerateToken"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:08:16 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "273"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"111-Ov0Z6xMziMh2WKnR5ajwQFhAzvI\""
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"{{vault:json-web-token}}\",\n    \"expires\": \"2024-09-10T03:08:16.060Z\",\n    \"status\": \"Success\",\n    \"result\": \"User authorized successfully.\"\n}"
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"kanchana\",\r\n  \"password\": \"Kan@123!\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/Authorized",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"Authorized"
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"kanchana\",\r\n  \"password\": \"Kan@123!\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/v1/Authorized",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"Authorized"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:08:30 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "4"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"4-X/5TO4MPCKAyY0ipFgr6/IraRNs\""
						}
					],
					"cookie": [],
					"body": "true"
				}
			]
		},
		{
			"name": "Get User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User details retrieved successfully\", function () {\r",
							"    // Check if the response status is 200\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"    // Parse the response body\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    // Validate the presence of essential properties\r",
							"    pm.expect(jsonData).to.have.property(\"userId\"); // Validate userId\r",
							"    pm.expect(jsonData).to.have.property(\"username\"); // Validate username\r",
							"    pm.expect(jsonData).to.have.property(\"books\"); // Validate books array\r",
							"\r",
							"    // Optionally log the retrieved user details\r",
							"    console.log(\"User Details:\", jsonData);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{ApiToken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/User/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"{{userId}}"
					]
				}
			},
			"response": [
				{
					"name": "Get User Details",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ApiToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/v1/User/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"User",
								"{{userId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:09:52 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "82"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"52-M2Ok9hof+ZQNoheZCS6+AuFJOdk\""
						}
					],
					"cookie": [],
					"body": "{\n    \"userId\": \"9feb2038-9b7b-474a-9a3d-b26a3055bc86\",\n    \"username\": \"kanchana\",\n    \"books\": []\n}"
				}
			]
		},
		{
			"name": "Get All Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// validate status code is correct (200)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// validate response time is less than 500ms\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"// JSON schema of Get All Books\r",
							"var schema = {\r",
							"    \"type\": \"array\",\r",
							"    \"items\": {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"            \"isbn\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"title\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"subTitle\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"author\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"publish_date\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"publisher\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"pages\": {\r",
							"                \"type\": \"number\"\r",
							"            },\r",
							"            \"description\": {\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"website\": {\r",
							"                \"type\": \"string\",\r",
							"                \"format\": \"uri\"\r",
							"            }\r",
							"        },\r",
							"        \"required\": [\r",
							"            \"isbn\",\r",
							"            \"title\",\r",
							"            \"subTitle\",\r",
							"            \"author\",\r",
							"            \"publish_date\",\r",
							"            \"publisher\",\r",
							"            \"pages\",\r",
							"            \"description\",\r",
							"            \"website\"\r",
							"        ]\r",
							"    }\r",
							"};\r",
							"\r",
							"var jsonResponse = pm.response.json().books;\r",
							"\r",
							"// validate response body schema\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonResponse, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"// set book ISBN and title to collection variables; will be used for Get A Book\r",
							"pm.collectionVariables.set(\"isbn_id\", jsonResponse[0].isbn);\r",
							"pm.collectionVariables.set(\"book_title\", jsonResponse[0].title);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/BookStore/v1/Books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"BookStore",
						"v1",
						"Books"
					]
				}
			},
			"response": [
				{
					"name": "Get All Books",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/BookStore/v1/Books",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:10:08 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "4514"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"11a2-8zfX++QwcgaCjSU6F8JP9fUd1tY\""
						}
					],
					"cookie": [],
					"body": "{\n    \"books\": [\n        {\n            \"isbn\": \"9781449325862\",\n            \"title\": \"Git Pocket Guide\",\n            \"subTitle\": \"A Working Introduction\",\n            \"author\": \"Richard E. Silverman\",\n            \"publish_date\": \"2020-06-04T08:48:39.000Z\",\n            \"publisher\": \"O'Reilly Media\",\n            \"pages\": 234,\n            \"description\": \"This pocket guide is the perfect on-the-job companion to Git, the distributed version control system. It provides a compact, readable introduction to Git for new users, as well as a reference to common commands and procedures for those of you with Git exp\",\n            \"website\": \"http://chimera.labs.oreilly.com/books/1230000000561/index.html\"\n        },\n        {\n            \"isbn\": \"9781449331818\",\n            \"title\": \"Learning JavaScript Design Patterns\",\n            \"subTitle\": \"A JavaScript and jQuery Developer's Guide\",\n            \"author\": \"Addy Osmani\",\n            \"publish_date\": \"2020-06-04T09:11:40.000Z\",\n            \"publisher\": \"O'Reilly Media\",\n            \"pages\": 254,\n            \"description\": \"With Learning JavaScript Design Patterns, you'll learn how to write beautiful, structured, and maintainable JavaScript by applying classical and modern design patterns to the language. If you want to keep your code efficient, more manageable, and up-to-da\",\n            \"website\": \"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/\"\n        },\n        {\n            \"isbn\": \"9781449337711\",\n            \"title\": \"Designing Evolvable Web APIs with ASP.NET\",\n            \"subTitle\": \"Harnessing the Power of the Web\",\n            \"author\": \"Glenn Block et al.\",\n            \"publish_date\": \"2020-06-04T09:12:43.000Z\",\n            \"publisher\": \"O'Reilly Media\",\n            \"pages\": 238,\n            \"description\": \"Design and build Web APIs for a broad range of clients—including browsers and mobile devices—that can adapt to change over time. This practical, hands-on guide takes you through the theory and tools you need to build evolvable HTTP services with Microsoft\",\n            \"website\": \"http://chimera.labs.oreilly.com/books/1234000001708/index.html\"\n        },\n        {\n            \"isbn\": \"9781449365035\",\n            \"title\": \"Speaking JavaScript\",\n            \"subTitle\": \"An In-Depth Guide for Programmers\",\n            \"author\": \"Axel Rauschmayer\",\n            \"publish_date\": \"2014-02-01T00:00:00.000Z\",\n            \"publisher\": \"O'Reilly Media\",\n            \"pages\": 460,\n            \"description\": \"Like it or not, JavaScript is everywhere these days-from browser to server to mobile-and now you, too, need to learn the language or dive deeper than you have. This concise book guides you into and through JavaScript, written by a veteran programmer who o\",\n            \"website\": \"http://speakingjs.com/\"\n        },\n        {\n            \"isbn\": \"9781491904244\",\n            \"title\": \"You Don't Know JS\",\n            \"subTitle\": \"ES6 & Beyond\",\n            \"author\": \"Kyle Simpson\",\n            \"publish_date\": \"2015-12-27T00:00:00.000Z\",\n            \"publisher\": \"O'Reilly Media\",\n            \"pages\": 278,\n            \"description\": \"No matter how much experience you have with JavaScript, odds are you don’t fully understand the language. As part of the \\\\\\\"You Don’t Know JS\\\\\\\" series, this compact guide focuses on new features available in ECMAScript 6 (ES6), the latest version of the st\",\n            \"website\": \"https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20&%20beyond\"\n        },\n        {\n            \"isbn\": \"9781491950296\",\n            \"title\": \"Programming JavaScript Applications\",\n            \"subTitle\": \"Robust Web Architecture with Node, HTML5, and Modern JS Libraries\",\n            \"author\": \"Eric Elliott\",\n            \"publish_date\": \"2014-07-01T00:00:00.000Z\",\n            \"publisher\": \"O'Reilly Media\",\n            \"pages\": 254,\n            \"description\": \"Take advantage of JavaScript's power to build robust web-scale or enterprise applications that are easy to extend and maintain. By applying the design patterns outlined in this practical book, experienced JavaScript developers will learn how to write flex\",\n            \"website\": \"http://chimera.labs.oreilly.com/books/1234000000262/index.html\"\n        },\n        {\n            \"isbn\": \"9781593275846\",\n            \"title\": \"Eloquent JavaScript, Second Edition\",\n            \"subTitle\": \"A Modern Introduction to Programming\",\n            \"author\": \"Marijn Haverbeke\",\n            \"publish_date\": \"2014-12-14T00:00:00.000Z\",\n            \"publisher\": \"No Starch Press\",\n            \"pages\": 472,\n            \"description\": \"JavaScript lies at the heart of almost every modern web application, from social apps to the newest browser-based games. Though simple for beginners to pick up and play with, JavaScript is a flexible, complex language that you can use to build full-scale \",\n            \"website\": \"http://eloquentjavascript.net/\"\n        },\n        {\n            \"isbn\": \"9781593277574\",\n            \"title\": \"Understanding ECMAScript 6\",\n            \"subTitle\": \"The Definitive Guide for JavaScript Developers\",\n            \"author\": \"Nicholas C. Zakas\",\n            \"publish_date\": \"2016-09-03T00:00:00.000Z\",\n            \"publisher\": \"No Starch Press\",\n            \"pages\": 352,\n            \"description\": \"ECMAScript 6 represents the biggest update to the core of JavaScript in the history of the language. In Understanding ECMAScript 6, expert developer Nicholas C. Zakas provides a complete guide to the object types, syntax, and other exciting changes that E\",\n            \"website\": \"https://leanpub.com/understandinges6/read\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get A book",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/BookStore/v1/Book?ISBN={{isbn_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"BookStore",
						"v1",
						"Book"
					],
					"query": [
						{
							"key": "ISBN",
							"value": "{{isbn_id}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get A book",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/BookStore/v1/Book?ISBN={{isbn_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Book"
							],
							"query": [
								{
									"key": "ISBN",
									"value": "{{isbn_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:10:18 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "549"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"225-6wegpsdSbs3Zjpo/5fzJQey1dRQ\""
						}
					],
					"cookie": [],
					"body": "{\n    \"isbn\": \"9781449325862\",\n    \"title\": \"Git Pocket Guide\",\n    \"subTitle\": \"A Working Introduction\",\n    \"author\": \"Richard E. Silverman\",\n    \"publish_date\": \"2020-06-04T08:48:39.000Z\",\n    \"publisher\": \"O'Reilly Media\",\n    \"pages\": 234,\n    \"description\": \"This pocket guide is the perfect on-the-job companion to Git, the distributed version control system. It provides a compact, readable introduction to Git for new users, as well as a reference to common commands and procedures for those of you with Git exp\",\n    \"website\": \"http://chimera.labs.oreilly.com/books/1230000000561/index.html\"\n}"
				}
			]
		},
		{
			"name": "Delete A User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User deletion response\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"if (pm.response.code === 401) {\r",
							"    console.log(\"Unauthorized: \", pm.response.json());\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{ApiToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/Account/v1/User/9feb2038-9b7b-474a-9a3d-b26a3055bc86",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"Account",
						"v1",
						"User",
						"9feb2038-9b7b-474a-9a3d-b26a3055bc86"
					]
				}
			},
			"response": [
				{
					"name": "Delete A User",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ApiToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Account/v1/User/9feb2038-9b7b-474a-9a3d-b26a3055bc86",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"User",
								"9feb2038-9b7b-474a-9a3d-b26a3055bc86"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.17.10 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Sep 2024 03:11:32 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "48"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "ETag",
							"value": "W/\"30-zoAnprTpYK9HmHYlpHOx6U+Br2A\""
						}
					],
					"cookie": [],
					"body": "{\n    \"code\": \"1207\",\n    \"message\": \"User Id not correct!\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "isbn_id",
			"value": ""
		},
		{
			"key": "book_title",
			"value": ""
		}
	]
}